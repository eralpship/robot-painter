/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 -t e-model.glb 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    robot: THREE.Mesh
    flag: THREE.Mesh
    lid: THREE.Mesh
    lid_inside: THREE.Mesh
    robot_body_paint: THREE.Mesh
    robot_inside: THREE.Mesh
    wheel_back_left: THREE.Mesh
    wheel_back_right: THREE.Mesh
    wheel_front_left: THREE.Mesh
    wheel_front_right: THREE.Mesh
    wheel_middle_left: THREE.Mesh
    wheel_middle_right: THREE.Mesh
  }
  materials: {
    body: THREE.MeshStandardMaterial
    ['lid paint']: THREE.MeshStandardMaterial
    inside: THREE.MeshStandardMaterial
    ['body paint']: THREE.MeshStandardMaterial
    wheel: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/e-model.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.robot.geometry} material={materials.body} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <pointLight intensity={2543.646} decay={2} color="#ffe8a0" position={[-249.205, 383.607, -291.883]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <pointLight intensity={2543.646} decay={2} color="#ffe8a0" position={[244.908, 383.607, -291.883]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <pointLight intensity={260.887} decay={2} color="#ff0011" position={[250.51, -326.223, -602.573]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <pointLight intensity={260.887} decay={2} color="#ff0000" position={[38.204, -384.368, -602.573]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <pointLight intensity={260.887} decay={2} color="#ff0000" position={[-0.018, -384.368, -602.573]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <pointLight intensity={260.887} decay={2} color="#ff0000" position={[-47.829, -384.368, -602.573]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <pointLight intensity={260.887} decay={2} color="#ff0011" position={[-248.999, -326.223, -602.573]} rotation={[-Math.PI, 0, 0]} scale={100} />
        <mesh geometry={nodes.flag.geometry} material={materials.body} position={[-301.46, 198.68, -535.916]} />
        <mesh geometry={nodes.lid.geometry} material={materials['lid paint']} position={[0, 431.604, -641.88]}>
          <mesh geometry={nodes.lid_inside.geometry} material={materials.inside} position={[0.023, 0, 0]} />
        </mesh>
        <mesh geometry={nodes.robot_body_paint.geometry} material={materials['body paint']} position={[0, 0, -410.009]} rotation={[-Math.PI / 2, 0, 0]} scale={[619.124, 191.985, 619.124]} />
        <mesh geometry={nodes.robot_inside.geometry} material={materials.inside} />
        <mesh geometry={nodes.wheel_back_left.geometry} material={materials.wheel} position={[-322.374, -232.137, -139.723]} />
        <mesh geometry={nodes.wheel_back_right.geometry} material={materials.wheel} position={[322.257, -232.137, -139.723]} rotation={[-Math.PI, 0, -Math.PI]} />
        <mesh geometry={nodes.wheel_front_left.geometry} material={materials.wheel} position={[-322.374, 348.386, -139.723]} />
        <mesh geometry={nodes.wheel_front_right.geometry} material={materials.wheel} position={[322.257, 348.386, -139.723]} rotation={[-Math.PI, 0, -Math.PI]} />
        <mesh geometry={nodes.wheel_middle_left.geometry} material={materials.wheel} position={[-322.374, 50.272, -139.723]} />
        <mesh geometry={nodes.wheel_middle_right.geometry} material={materials.wheel} position={[322.257, 50.272, -139.723]} rotation={[-Math.PI, 0, -Math.PI]} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/e-model.glb')
